% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render.R
\name{metaRender}
\alias{metaRender}
\title{Create a meta-reactive output}
\usage{
metaRender(renderFunc, expr, ..., env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{renderFunc}{A reactive output function (e.g., \link[shiny:renderPlot]{shiny::renderPlot}, \link[shiny:renderText]{shiny::renderText}, \link[shiny:renderUI]{shiny::renderUI}, etc).}

\item{expr}{An expression that generates given output expected by \code{renderFunc}.}

\item{...}{Other arguments passed along to \code{renderFunc}.}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})?
This is useful if you want to save an expression in a variable.}
}
\description{
Create a meta-reactive output that, when invoked with meta-mode activated
(i.e. called within \code{\link[=expandCode]{expandCode()}} or \code{\link[=withMetaMode]{withMetaMode()}}), returns a
code expression (instead of evaluating that expression and returning the value).
}
\details{
If you wish to capture specific code inside of \code{expr} (e.g. ignore code
that has no meaning outside shiny, like \code{\link[=req]{req()}}), use \code{metaRender2()} in combination
with \code{metaExpr()}.
}
\seealso{
\code{\link[=metaExpr]{metaExpr()}}
}
